import datetime
import uuid
import logging
import time

from faker import Faker
import pandas as pd

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

fake = Faker(locale="ru_RU")

CNT_USER = 1_000

def main():
    start_time = time.time()
    logger.info("–ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö...")

    list_of_dict = []
    total_records = CNT_USER

    for i in range(total_records):
        dict_ = {
            "id": str(uuid.uuid4()),
            "created_at": fake.date_time_ad(
                start_datetime=datetime.date(year=2024, month=1, day=1),
                end_datetime=datetime.date(year=2025, month=1, day=1),
            ),
            "first_name": fake.first_name(),
            "last_name": fake.last_name(),
            "middle_name": fake.middle_name(),
            "birthday": fake.date_time_ad(
                start_datetime=datetime.date(year=1980, month=1, day=1),
                end_datetime=datetime.date(year=2005, month=1, day=1),
            ),
            "email": fake.email(),
            "city": fake.city(),
        }
        list_of_dict.append(dict_)

        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –∫–∞–∂–¥—ã–µ 10 –º–∏–ª–ª–∏–æ–Ω–æ–≤ –∑–∞–ø–∏—Å–µ–π (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        if (i + 1) % 10_000_000 == 0:
            elapsed = time.time() - start_time
            logger.info(f"–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {i + 1:,} –∑–∞–ø–∏—Å–µ–π –∑–∞ {elapsed:.2f} —Å–µ–∫—É–Ω–¥")

    logger.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°–æ–∑–¥–∞–Ω–∏–µ DataFrame...")

    df = pd.DataFrame(list_of_dict)
    logger.info("üë®üèª‚Äçüíª DataFrame —Å–æ–∑–¥–∞–Ω. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ Parquet...")

    df.to_parquet(
        path=f"data_{CNT_USER}.parquet",
        engine="auto",
        compression=None,
        index=False,
    )

    end_time = time.time()
    total_time = end_time - start_time
    logger.info(f"‚úÖ –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à—ë–Ω. –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {total_records:,} –∑–∞–ø–∏—Å–µ–π –∑–∞ {total_time:.2f} —Å–µ–∫—É–Ω–¥")


if __name__ == "__main__":
    main()